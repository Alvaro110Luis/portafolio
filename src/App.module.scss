$azul: rgb(80, 120, 255);
$blanco: rgb(255, 255, 255);
$negro: rgb(0, 0, 0);
.bodyProyectos {
  &::-webkit-scrollbar {
    width: 10px;
    background-color: $negro;
  }
  &::-webkit-scrollbar-thumb {
    background-color: rgb(50, 50, 180);
    border-radius: 20px;
    &:hover {
      background-color: rgb(80, 80, 210);
    }
  }
}
.containCirculosBackground {
  position: fixed;
  display: flex;
  justify-content: space-around;
  width: 90%;
  height: 90vh;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) rotate(-45deg);
  @mixin animacionEven() {
    animation-name: mianimacionEven;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    @keyframes mianimacionEven {
      0% {
        box-shadow: 0 0 10px 1px rgb(30, 30, 100);
        width: 1px;
        height: 1px;
        margin: {
          top: 100vh;
          left: 19px;
          right: 19px;
        }
      }
      100% {
        margin: {
          top: 0;
          left: 0;
          right: 0;
        }
        width: 40px;
        height: 40px;
        box-shadow: 0 0 10px 10px rgb(30, 30, 100);
        opacity: 0;
      }
    }
  }
  @mixin animacionOdd() {
    animation-name: mianimacionOdd;
    animation-timing-function: linear;
    animation-iteration-count: infinite;
    @keyframes mianimacionOdd {
      0% {
        box-shadow: 0 0 10px 1px rgb(30, 30, 60);
        width: 1px;
        height: 1px;
        margin: {
          top: 100vh;
          left: 19px;
          right: 19px;
        }
      }
      100% {
        margin: {
          top: 0;
          left: 0;
          right: 0;
        }
        width: 40px;
        height: 40px;
        box-shadow: 0 0 10px 10px rgb(30, 30, 60);
        opacity: 0;
      }
    }
  }
  .animacion {
    border-radius: 100%;
    &:nth-child(even) {
      @include animacionEven();
    }
    &:nth-child(odd) {
      @include animacionOdd();
    }
  }
  &Light .animacion {
    &:nth-child(even) {
      background-color: rgb(0, 0, 135);
    }
    &:nth-child(odd) {
      background-color: rgb(20, 20, 20);
    }
  }
  &Dark .animacion {
    &:nth-child(even) {
      background-color: rgb(0, 10, 255);
    }
    &:nth-child(odd) {
      background-color: rgb(200, 200, 200);
    }
  }
}
$breakpoints: (
  sm: 540px,
  md: 768px,
  lg: 1024px,
);
@mixin button($backgroundColor) {
  white-space: nowrap;
  font-size: x-large;
  height: 25px;
  display: block;
  color: $blanco;
  text-decoration: none;
  padding: 10px;
  margin: 20% 60%;
  border-radius: 5px;
  font-weight: bold;
  background-color: $backgroundColor;
  overflow: hidden;
  width: 25px;
  transition: all 0.5s;
}
.contain {
  &Light {
    background-color: $blanco;
    color: $negro;
  }
  &Dark {
    background-color: $negro;
    color: $blanco;
  }
  &Button {
    &Light {
      a {
        box-shadow: 10px 10px $negro;
      }
    }
    &Dark {
      a {
        box-shadow: -10px 10px $blanco;
      }
    }
    position: fixed;
    width: 10%;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    z-index: 2;
    a {
      border: 1px solid $negro;
      &:nth-child(1) {
        @include button(rgb(255, 0, 0));
      }
      &:nth-child(2) {
        @include button(rgb(0, 180, 0));
      }
      &:nth-child(3) {
        @include button(rgb(0, 0, 255));
      }
      &:hover {
        svg {
          display: none;
        }
        width: 120px;
        &:nth-child(1)::after {
          content: "Sobre m√≠";
        }
        &:nth-child(2)::after {
          content: "Proyectos";
        }
        &:nth-child(3)::after {
          content: "Contacto";
        }
      }
    }
  }
  &Settings {
    @include button($blanco);
    color: $negro;
    padding: 0;
    font-size: 40px;
    width: 45px;
    height: 45px;
    &Dark {
      border: 1px solid $blanco;
      background-color: $negro;
      color: $blanco;
      box-shadow: -10px 10px $blanco;
    }
    &Light {
      border: 1px solid $negro;
      background-color: $blanco;
      box-shadow: 10px 10px $negro;
    }
    &Icon {
      &BorderDark {
        border-right: 1px solid $blanco;
      }
      &BorderLight {
        border-right: 1px solid $negro;
      }
      padding: 2px;
      display: inline-block;
      .settingsIconOpen {
        margin-bottom: 5px;
        transition: transform 0.7s;
      }
      svg:hover {
        cursor: pointer;
      }
      div {
        margin: {
          bottom: 10px;
          right: 5px;
        }
        font-size: 30px;
        &:hover {
          cursor: pointer;
        }
      }
    }
    &Description {
      display: inline-block;
      p {
        margin: {
          top: 20px;
          left: 15px;
          bottom: 0;
        }
        font-size: x-large;
      }
    }
    .lightModeButton {
      transform: rotate(180deg);
      color: $negro;
    }
    .darkModeButton {
      color: $blanco;
    }
    &:hover {
      .settingsIconOpen {
        transform: rotate(270deg);
      }
      width: 190px;
      height: 150px;
    }
  }
  &Content {
    width: 75%;
    margin: {
      left: 10%;
    }
    display: inline-block;
    position: relative;
    z-index: 1;
    &Me {
      margin: {
        left: 15%;
        top: 20%;
        right: 20%;
        bottom: 20%;
      }
      h1 {
        border: {
          left: 10px solid rgb(255, 0, 0);
          bottom: 5px solid rgb(105, 0, 0);
        }
        font-size: xx-large;
        overflow: hidden;
        span {
          animation: {
            name: appearX;
            duration: 1s;
            fill-mode: forwards;
          }
          display: inline-block;
          transform: translateX(-100%);
        }
      }
      p {
        overflow: hidden;
        line-height: 1.7;
        padding: {
          right: 30px;
          bottom: 20px;
        }
        border: {
          right: 10px solid rgb(105, 0, 0);
          bottom: 5px solid rgb(255, 0, 0);
        }
        span {
          animation: {
            name: appear-Y;
            duration: 2s;
            fill-mode: forwards;
          }
          display: inline-block;
          transform: translateY(100%);
        }
      }
      @keyframes appearX {
        100% {
          transform: translateX(0);
        }
      }
      @keyframes appear-Y {
        100% {
          transform: translateY(0);
        }
      }
    }
  }
}
